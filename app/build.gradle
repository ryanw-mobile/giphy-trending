plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk 31

    Properties keyProps = new Properties()
    keyProps.load(new FileInputStream(file('../../keystore.properties')))

    defaultConfig {
        applicationId "uk.ryanwong.giphytrending"
        minSdk 21
        targetSdk 31
        versionCode 2
        versionName "1.1.0"

        resConfigs "en"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Bundle output filename
        setProperty("archivesBaseName", "giphy-" + versionName + "-" + new Date().format('yyyyMMdd-HHmmss'))

        // Configurable values - We are able to set different values for each build
        buildConfigField 'String', 'GIPHY_ENDPOINT', '"https://api.giphy.com/"'
        buildConfigField 'String', 'GIPHY_API_KEY', keyProps["giphyApiKey"]
        buildConfigField 'String', 'DATABASE_NAME', '"trending.db"'
        buildConfigField 'String', 'API_LIMIT', '"100"'
        buildConfigField 'String', 'API_RATING', '"G"'
    }

    signingConfigs {
        release {
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false

            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date()
                    def formattedDate = date.format('yyyyMMdd-HHmmss')
                    outputFileName = "giphy-${variant.name}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }

        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date()
                    def formattedDate = date.format('yyyyMMdd-HHmmss')
                    outputFileName = "giphy-${variant.name}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }
    }

    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }
    testOptions {
        animationsDisabled = true
    }
    packagingOptions {
        // for JNA and JNA-platform
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        // for byte-buddy
        exclude "META-INF/licenses/ASM"
        pickFirst "win32-x86-64/attach_hotspot_windows.dll"
        pickFirst "win32-x86/attach_hotspot_windows.dll"
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
}

dependencies {
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.5.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def retrofit_version = '2.9.0'
    def dagger_version = '2.40'
    def room_version = '2.3.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Android Lifecycle Extensions
    def lifecycle_version = '2.4.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.activity:activity-ktx:1.4.0"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Navigation
    def navigation_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Glide for Images
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    // Moshi
    def moshi_version = "1.12.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //RxJava 2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.4.0"
    androidTestImplementation "android.arch.core:core-testing:1.1.1"

    // Room 2
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
}